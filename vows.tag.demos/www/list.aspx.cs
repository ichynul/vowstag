using System;
using System.Linq;
using Tag.Vows.Web;
using model;

//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//    生成时间: 2016年02月24日 14:57:20。
//    应避免手动更改此文件。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------
/*  Powered by VowsTag http://git.oschina.net/ichynul/vowstag/wikis/home  */

public partial class Page_list : xx.yy.PageBase
       /*重新指定了页面处理类，请确保 xx.yy.PageBase 直接或间接继承自'Tag.Vows.Web.TagPage'*/
{
    protected Category ReadTag_31_4;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!this.IsPostBack)
        {
            if (this.Befor_Load_Tags())
            {
                Load_LabelTag_16_3();
                Bind_ReadTag_31_4();
                Bind_ListTag_73_6();
            }
        }
    }

    public void Load_LabelTag_16_3()
    {
        SubControl uc_label=(SubControl) LoadControl( "notice.ascx");
        uc_label.SetDb(db);
        uc_label.SetConfig(this.config);
        LabelTag_16_3.Controls.Add(uc_label);
    }

    public void Bind_ReadTag_31_4()
    {
        /*id=request.cid*/
        long long_cid = long.MinValue;
        long.TryParse("" + Request.QueryString["cid"],out long_cid);

        ReadTag_31_4 = db
.                Category.FirstOrDefault( b=>
                     b.ID == long_cid
                    );
        if (ReadTag_31_4 == null)
        {
            ReadTag_31_4 = new Category();
        }
    }

    public void Bind_ListTag_73_6()
    {
        /*categ=request.cid&orderby=time,istop&desc=true&pagesize=4*/
        int int_cid = int.MinValue;
        int.TryParse("" + Request.QueryString["cid"],out int_cid);
        var list = from a in db.Article.Where(x => x.IsLock != true)
                .Where( b=>
                     b.Categ == int_cid
                    )
                    select new
                    {
                        a.ID,
                        a.Title,
                        a.Time,
                        a.Content,
                        a.Img,
                        a.IsTop
                    };
        int totalsize = list.Count();
        list = list.OrderByDescending(c=>c.Time)
                    .ThenByDescending(c=>c.IsTop).Skip((page - 1) * 4).Take(4);
        /*分页，每页显示4;*/
        Pager pager= new Pager(totalsize, page, 4, RemovePageParams(Request.RawUrl), 3, "上一页", "下一页", "...", true);
        PagerTag_17_12.Text = "<div id='pager'>" + pager.MakeLinks() +"</div>"; 
        if (list.Count() == 0)
        {
            empty_ListTag_73_6.Text = "<div class='emptydiv'><span class='emptytext'>暂无内容</span></div>";
            return;
        }
        ListTag_73_6.DataSource = list;
        ListTag_73_6.DataBind();
    }


    private Entities _db;
    protected Entities db
    {
        get
        {
            if (_db == null)
            {
                _db = new Entities();
            }
            return _db;
        }
    }

    protected override object GetDbObject()
    {
        return this.db;
    }
}