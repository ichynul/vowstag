using System;
using System.Linq;
using Tag.Vows.Web;
using model;

//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//    生成时间: 2016年10月09日 14:26:35。
//    应避免手动更改此文件。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------
/*  Powered by VowsTag v-1.4.16.8 http://git.oschina.net/ichynul/vowstag */

public partial class Page_test2 : xx.yy.PageBase
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!this.IsPostBack)
        {
            ClientScript.GetCallbackEventReference(this, "", "", "");
            if (this.Befor_Load_Tags())
            {
                Bind_ListTag_44909_2();
            }
        }
    }

    public void Bind_ListTag_44909_2()
    {
        /*"3"=url.type&id=4&pagesize=3*/
        bool ifEqual_type_1 = "3" == Request.QueryString["type"];
        var list = from a in Db_Context.Article.Where(x => x.IsLock != true)
                .Where( b=>
                     ifEqual_type_1 
                     && b.ID == 4
                    )
                    select new
                    {
                        a.Title,
                        a.ID
                    };
        int totalsize = list.Count();
        list = list.OrderByDescending(c=>c.ID).Skip((page - 1) * 3).Take(3);
        /*分页，每页显示3;*/
        /*无法分页，未设置分页标签！;*/
        if (totalsize == 0)
        {
            empty_ListTag_44909_2.Text = "<div class='emptydiv'><span class='emptytext'>暂无内容</span></div>";
            return;
        }
        ListTag_44909_2.DataSource = list.ToList();
        ListTag_44909_2.DataBind();
    }


    private Entities _Db_Context;
    protected Entities Db_Context
    {
        get
        {
            if (_Db_Context == null)
            {
                _Db_Context = new Entities();
            }
            return _Db_Context;
        }
    }

    protected override object GetDbObject()
    {
        return this.Db_Context;
    }

    protected override void OnUnload(EventArgs e)
    {
        if (_Db_Context != null)
        {
            _Db_Context.Dispose();
        }
        base.OnUnload(e);
    }
}